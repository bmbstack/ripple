// Code generated by ripple g, You can edit it again.

package ecode

import (
	"github.com/labstack/echo/v4"
	"net/http"
)


//==============================================
//                  code
//==============================================

var (
	Success     = value(200, "成功")
	ServerError = value(500, "服务器错误")
	ParamError  = value(501, "参数错误")
)

//==============================================
//                  OK
//==============================================

func OK(ctx echo.Context, data interface{}) error {
	return ctx.JSON(http.StatusOK, map[string]interface{}{
		"code": Success.Code,
		"msg":  Success.Msg,
		"data": data,
	})
}

//==============================================
//                  Error
//==============================================

func Error(ctx echo.Context, ecode Ecode) error {
	return ctx.JSON(http.StatusOK, map[string]interface{}{
		"code": ecode.Code,
		"msg":  ecode.Msg,
		"data": []map[string]interface{}{},
	})
}

func ErrorWithHttpCode(ctx echo.Context, httpCode int, ecode Ecode) error {
	return ctx.JSON(httpCode, map[string]interface{}{
		"code": ecode.Code,
		"msg":  ecode.Msg,
		"data": []map[string]interface{}{},
	})
}

//==============================================
//                  Ecode
//==============================================

type Ecode struct {
	Code int64
	Msg  string
}

func value(code int64, msg string) Ecode {
	return Ecode{Code: code, Msg: msg}
}

// Status implement error interface
func (this Ecode) Error() string {
	return this.Msg
}
		