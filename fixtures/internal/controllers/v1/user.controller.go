// Code generated by ripple g, You can edit it again.
// source: fixtures/forum/internal/dto/user.dto.go

package v1

import (
	"net/http"

	"github.com/bmbstack/ripple/fixtures/forum/internal/dto"
	"github.com/bmbstack/ripple/fixtures/forum/internal/helper"
	"github.com/labstack/echo/v4"
)

type UserController struct {
	Group *echo.Group
	BaseController
}

func (this UserController) Setup() {
	this.Group.GET("/v1/user/info", this.ActionUserInfo)
	this.Group.GET("/v1/user/extra", this.ActionUserExtra)
	this.Group.POST("/v1/user/say", this.ActionUserSay)
}

func (this UserController) ActionUserInfo(ctx echo.Context) error {
	params := &dto.ReqUserInfo{}
	err := ctx.Bind(params)
	if err != nil {
		return ctx.JSON(http.StatusOK, helper.ErrorJSON(helper.ErrorMsgParamsValidateFailed, helper.ErrorCodeParamsValidateFailed))
	}

	// TODO: add some code
	result := &dto.RespUserInfo{}
	return ctx.JSON(http.StatusOK, helper.SuccessJSON(result))
}

func (this UserController) ActionUserExtra(ctx echo.Context) error {
	params := &dto.ReqUserExtra{}
	err := ctx.Bind(params)
	if err != nil {
		return ctx.JSON(http.StatusOK, helper.ErrorJSON(helper.ErrorMsgParamsValidateFailed, helper.ErrorCodeParamsValidateFailed))
	}

	// TODO: add some code
	result := &dto.RespUserExtra{}
	return ctx.JSON(http.StatusOK, helper.SuccessJSON(result))
}

func (this UserController) ActionUserSay(ctx echo.Context) error {
	params := &dto.ReqUserSay{}
	err := ctx.Bind(params)
	if err != nil {
		return ctx.JSON(http.StatusOK, helper.ErrorJSON(helper.ErrorMsgParamsValidateFailed, helper.ErrorCodeParamsValidateFailed))
	}

	// TODO: add some code
	result := &dto.RespUserSay{}
	return ctx.JSON(http.StatusOK, helper.SuccessJSON(result))
}
